{{> layout/header}}
<style>
    .circle_avatar{
        width: 200px;
        height: 200px;
        border-radius: 100px;
    }
</style>
<div class="container p-5">

    <div class="card">
        <div class="card-header"><b>회원수정을 해주세요</b></div>
        <div class="card-header d-flex justify-content-center">
            <img id="preview" class="circle_avatar" src="/images/{{user.picUrl}}">
        </div>
        <div class="card-body">
            <form action="/user/update" method="post" enctype="multipart/form-data">
                <div class="mb-3">
                    <input type="text" class="form-control" placeholder="Enter username" disabled value="{{user.username}}">
                </div>
                <div class="mb-3">
                    <input type="password" class="form-control" placeholder="Enter password" name="password" required>
                </div>
                <div class="mb-3">
                    <input type="email" class="form-control" placeholder="Enter email" disabled value="{{user.email}}">
                </div>
                <div class="mb-3">
                    <input type="file" class="form-control" placeholder="Enter pic" onchange="changePic(event)" name="pic">
                </div>
                <button type="submit" class="btn btn-primary form-control">회원가입수정</button>
            </form>
        </div>
    </div>
</div>
<script>
    function changePic(e1){
        console.log(e1);
        // 이미지에 접근하기(리스트로 되어 있어서 0번지로 찾음)
        let f = e1.srcElement.files[0];

        // 확장자 거르기
        // 선택한 파일의 MIME 타입이 "image"로 시작하는지 확인
        if(f.type.match("image.*")){
            alert("이미지를 등록해주세요.")
            return;
        }

        // 버퍼만들기 (하드웨어있는 파일을 메모리로 끓어올리기)
        let reader = new FileReader(); // FileReader는 파일의 내용을 비동기적으로 읽어오는 기능을 제공

        // 파일을 읽기전에 onload
        reader.onload = function(e2){ // 파일이 다 읽어지면 콜백됨 (콜백함수)
            // HTML 문서 내에서 id가 "preview"인 요소를 선택. 이 요소는 이미지 미리보기를 표시할 img 태그를 의미
            let previewEl = document.querySelector("#preview");
            // 선택한 이미지 파일의 내용을 미리보기 요소의 src 속성에 설정하여 이미지를 표시
            // e2.target.result는 FileReader가 읽어온 이미지 데이터 URL을 나타냄
            previewEl.setAttribute("src", e2.target.result);
        }
        // 선택한 이미지 파일을 데이터 URL 형식으로 읽어옴. 이때 onload 콜백 함수가 호출되며, 파일의 내용을 읽은 후의 작업을 수행
        reader.readAsDataURL(f); // 버퍼로 파일 읽기 onload()
    }
</script>
{{> layout/footer}}